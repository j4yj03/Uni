

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Dec 01 20:22:38 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	10LF322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 29/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC10LF322 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0020                     	;# 
    97  0020                     	;# 
    98  0021                     	;# 
    99  0022                     	;# 
   100  0022                     	;# 
   101  0023                     	;# 
   102  0024                     	;# 
   103  0025                     	;# 
   104  0026                     	;# 
   105  0027                     	;# 
   106  0027                     	;# 
   107  0028                     	;# 
   108  0029                     	;# 
   109  002A                     	;# 
   110  002A                     	;# 
   111  002B                     	;# 
   112  002C                     	;# 
   113  002D                     	;# 
   114  002E                     	;# 
   115  0030                     	;# 
   116  0031                     	;# 
   117  0032                     	;# 
   118  0033                     	;# 
   119  0034                     	;# 
   120  0035                     	;# 
   121  0036                     	;# 
   122  0037                     	;# 
   123  0038                     	;# 
   124  0039                     	;# 
   125  003A                     	;# 
   126  003B                     	;# 
   127  003C                     	;# 
   128  003D                     	;# 
   129  003E                     	;# 
   130  003F                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0020                     	;# 
   166  0020                     	;# 
   167  0021                     	;# 
   168  0022                     	;# 
   169  0022                     	;# 
   170  0023                     	;# 
   171  0024                     	;# 
   172  0025                     	;# 
   173  0026                     	;# 
   174  0027                     	;# 
   175  0027                     	;# 
   176  0028                     	;# 
   177  0029                     	;# 
   178  002A                     	;# 
   179  002A                     	;# 
   180  002B                     	;# 
   181  002C                     	;# 
   182  002D                     	;# 
   183  002E                     	;# 
   184  0030                     	;# 
   185  0031                     	;# 
   186  0032                     	;# 
   187  0033                     	;# 
   188  0034                     	;# 
   189  0035                     	;# 
   190  0036                     	;# 
   191  0037                     	;# 
   192  0038                     	;# 
   193  0039                     	;# 
   194  003A                     	;# 
   195  003B                     	;# 
   196  003C                     	;# 
   197  003D                     	;# 
   198  003E                     	;# 
   199  003F                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0020                     	;# 
   235  0020                     	;# 
   236  0021                     	;# 
   237  0022                     	;# 
   238  0022                     	;# 
   239  0023                     	;# 
   240  0024                     	;# 
   241  0025                     	;# 
   242  0026                     	;# 
   243  0027                     	;# 
   244  0027                     	;# 
   245  0028                     	;# 
   246  0029                     	;# 
   247  002A                     	;# 
   248  002A                     	;# 
   249  002B                     	;# 
   250  002C                     	;# 
   251  002D                     	;# 
   252  002E                     	;# 
   253  0030                     	;# 
   254  0031                     	;# 
   255  0032                     	;# 
   256  0033                     	;# 
   257  0034                     	;# 
   258  0035                     	;# 
   259  0036                     	;# 
   260  0037                     	;# 
   261  0038                     	;# 
   262  0039                     	;# 
   263  003A                     	;# 
   264  003B                     	;# 
   265  003C                     	;# 
   266  003D                     	;# 
   267  003E                     	;# 
   268  003F                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000F                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001D                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  0020                     	;# 
   304  0020                     	;# 
   305  0021                     	;# 
   306  0022                     	;# 
   307  0022                     	;# 
   308  0023                     	;# 
   309  0024                     	;# 
   310  0025                     	;# 
   311  0026                     	;# 
   312  0027                     	;# 
   313  0027                     	;# 
   314  0028                     	;# 
   315  0029                     	;# 
   316  002A                     	;# 
   317  002A                     	;# 
   318  002B                     	;# 
   319  002C                     	;# 
   320  002D                     	;# 
   321  002E                     	;# 
   322  0030                     	;# 
   323  0031                     	;# 
   324  0032                     	;# 
   325  0033                     	;# 
   326  0034                     	;# 
   327  0035                     	;# 
   328  0036                     	;# 
   329  0037                     	;# 
   330  0038                     	;# 
   331  0039                     	;# 
   332  003A                     	;# 
   333  003B                     	;# 
   334  003C                     	;# 
   335  003D                     	;# 
   336  003E                     	;# 
   337  003F                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0008                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0020                     	;# 
   373  0020                     	;# 
   374  0021                     	;# 
   375  0022                     	;# 
   376  0022                     	;# 
   377  0023                     	;# 
   378  0024                     	;# 
   379  0025                     	;# 
   380  0026                     	;# 
   381  0027                     	;# 
   382  0027                     	;# 
   383  0028                     	;# 
   384  0029                     	;# 
   385  002A                     	;# 
   386  002A                     	;# 
   387  002B                     	;# 
   388  002C                     	;# 
   389  002D                     	;# 
   390  002E                     	;# 
   391  0030                     	;# 
   392  0031                     	;# 
   393  0032                     	;# 
   394  0033                     	;# 
   395  0034                     	;# 
   396  0035                     	;# 
   397  0036                     	;# 
   398  0037                     	;# 
   399  0038                     	;# 
   400  0039                     	;# 
   401  003A                     	;# 
   402  003B                     	;# 
   403  003C                     	;# 
   404  003D                     	;# 
   405  003E                     	;# 
   406  003F                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0020                     	;# 
   442  0020                     	;# 
   443  0021                     	;# 
   444  0022                     	;# 
   445  0022                     	;# 
   446  0023                     	;# 
   447  0024                     	;# 
   448  0025                     	;# 
   449  0026                     	;# 
   450  0027                     	;# 
   451  0027                     	;# 
   452  0028                     	;# 
   453  0029                     	;# 
   454  002A                     	;# 
   455  002A                     	;# 
   456  002B                     	;# 
   457  002C                     	;# 
   458  002D                     	;# 
   459  002E                     	;# 
   460  0030                     	;# 
   461  0031                     	;# 
   462  0032                     	;# 
   463  0033                     	;# 
   464  0034                     	;# 
   465  0035                     	;# 
   466  0036                     	;# 
   467  0037                     	;# 
   468  0038                     	;# 
   469  0039                     	;# 
   470  003A                     	;# 
   471  003B                     	;# 
   472  003C                     	;# 
   473  003D                     	;# 
   474  003E                     	;# 
   475  003F                     	;# 
   476                           
   477                           	psect	idataBANK0
   478  00E3                     __pidataBANK0:
   479                           
   480                           ;initializer for _numbers
   481  00E3  3400               	retlw	0
   482  00E4  3404               	retlw	4
   483  00E5  3402               	retlw	2
   484  00E6  3406               	retlw	6
   485  00E7  3401               	retlw	1
   486  00E8  3404               	retlw	4
   487  00E9  3403               	retlw	3
   488                           
   489                           	psect	nvBANK0
   490  0051                     __pnvBANK0:
   491  0051                     _counter:
   492  0051                     	ds	4
   493  0005                     _PORTAbits	set	5
   494  000B                     _INTCONbits	set	11
   495  001A                     _IOCAPbits	set	26
   496  001B                     _IOCANbits	set	27
   497  001C                     _IOCAFbits	set	28
   498  000E                     _OPTION_REGbits	set	14
   499  0009                     _WPUA	set	9
   500  0008                     _ANSELA	set	8
   501  0006                     _TRISA	set	6
   502  0007                     _LATA	set	7
   503  0030                     _WDTCON	set	48
   504  003F                     _BORCON	set	63
   505  0026                     _CLKRCON	set	38
   506  0010                     _OSCCON	set	16
   507  0013                     _T2CONbits	set	19
   508  0013                     _T2CON	set	19
   509  000D                     _PIE1bits	set	13
   510  000C                     _PIR1bits	set	12
   511  0011                     _TMR2	set	17
   512  0012                     _PR2	set	18
   513  0061                     _TMR2IF	set	97
   514                           
   515                           	psect	cinit
   516  000D                     start_initialization:	
   517                           ; #config settings
   518                           
   519  000D                     __initialization:
   520                           
   521                           ; Initialize objects allocated to BANK0
   522  000D  20E3               	fcall	__pidataBANK0	;fetch initializer
   523  000E  00CA               	movwf	__pdataBANK0& (0+127)
   524  000F  20E4               	fcall	__pidataBANK0+1	;fetch initializer
   525  0010  00CB               	movwf	(__pdataBANK0+1)& (0+127)
   526  0011  20E5               	fcall	__pidataBANK0+2	;fetch initializer
   527  0012  00CC               	movwf	(__pdataBANK0+2)& (0+127)
   528  0013  20E6               	fcall	__pidataBANK0+3	;fetch initializer
   529  0014  00CD               	movwf	(__pdataBANK0+3)& (0+127)
   530  0015  20E7               	fcall	__pidataBANK0+4	;fetch initializer
   531  0016  00CE               	movwf	(__pdataBANK0+4)& (0+127)
   532  0017  20E8               	fcall	__pidataBANK0+5	;fetch initializer
   533  0018  00CF               	movwf	(__pdataBANK0+5)& (0+127)
   534  0019  20E9               	fcall	__pidataBANK0+6	;fetch initializer
   535  001A  00D0               	movwf	(__pdataBANK0+6)& (0+127)
   536                           
   537                           ; Clear objects allocated to BANK0
   538  001B  01D5               	clrf	__pbssBANK0& (0+127)
   539  001C  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   540  001D                     end_of_initialization:	
   541                           ;End of C runtime variable initialization code
   542                           
   543  001D                     __end_of__initialization:
   544  001D  0183               	clrf	3
   545  001E  28BB               	ljmp	_main	;jump to C main() function
   546                           
   547                           	psect	bssBANK0
   548  0055                     __pbssBANK0:
   549  0055                     _IOCAF3_InterruptHandler:
   550  0055                     	ds	1
   551  0056                     _dice:
   552  0056                     	ds	1
   553                           
   554                           	psect	dataBANK0
   555  004A                     __pdataBANK0:
   556  004A                     _numbers:
   557  004A                     	ds	7
   558                           
   559                           	psect	cstackCOMMON
   560  0000                     __pcstackCOMMON:
   561  0000                     ??_PIN_MANAGER_Initialize:
   562  0000                     ??_OSCILLATOR_Initialize:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0000                     ??_WDT_Initialize:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0000                     ??_throwDice:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0000                     ??_TMR2_Initialize:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0000                     ??_TMR2_StartTimer:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0000                     ??_TMR2_StopTimer:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0000                     ??_SYSTEM_Initialize:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0000                     ??_TMR2_Handler:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0000                     ??_main:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0000                     ??_genNextNumber:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           	psect	cstackBANK0
   594  0040                     __pcstackBANK0:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0040                     ?_PIN_MANAGER_Initialize:
   598  0040                     ?_OSCILLATOR_Initialize:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0040                     ?_WDT_Initialize:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0040                     ?_throwDice:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0040                     ?_TMR2_Initialize:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0040                     ?_TMR2_StartTimer:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0040                     ?_TMR2_StopTimer:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0040                     ?_SYSTEM_Initialize:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0040                     ?_IOC_Handler:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0040                     ??_IOC_Handler:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0040                     ?_TMR2_Handler:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0040                     ?_INTERRUPT_InterruptManager:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0040                     ?_main:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0040                     ?_genNextNumber:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 1 bytes @ 0x0
   639  0040                     	ds	3
   640  0043                     IOC_Handler@state:
   641                           
   642                           ; 2 bytes @ 0x3
   643  0043                     	ds	2
   644  0045                     _IOC_Handler$353:
   645                           
   646                           ; 2 bytes @ 0x5
   647  0045                     	ds	2
   648  0047                     ??_INTERRUPT_InterruptManager:
   649                           
   650                           ; 1 bytes @ 0x7
   651  0047                     	ds	3
   652                           
   653                           	psect	maintext
   654  00BB                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 42 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B00/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0
   674 ;;      Params:         0       0
   675 ;;      Locals:         0       0
   676 ;;      Temps:          0       0
   677 ;;      Totals:         0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels required when called:    6
   680 ;; This function calls:
   681 ;;		_SYSTEM_Initialize
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _main
   689  00BB                     _main:
   690  00BB                     l887:	
   691                           ;incstack = 0
   692                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   693                           
   694  00BB  20D2               	fcall	_SYSTEM_Initialize
   695  00BC                     l889:
   696  00BC  178B               	bsf	11,7	;volatile
   697  00BD                     l891:
   698                           
   699                           ;main.c: 62:     {;main.c: 63:         counter=0;
   700  00BD  3000               	movlw	0
   701  00BE  00D4               	movwf	_counter+3
   702  00BF  3000               	movlw	0
   703  00C0  00D3               	movwf	_counter+2
   704  00C1  3000               	movlw	0
   705  00C2  00D2               	movwf	_counter+1
   706  00C3  3000               	movlw	0
   707  00C4  00D1               	movwf	_counter
   708  00C5  0063               	sleep	;# 
   709  00C6  28BD               	goto	l891
   710  00C7  280C               	ljmp	start
   711  00C8                     __end_of_main:
   712                           
   713                           	psect	text1
   714  00D2                     __ptext1:	
   715 ;; *************** function _SYSTEM_Initialize *****************
   716 ;; Defined at:
   717 ;;		line 54 in file "mcc_generated_files/mcc.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0
   731 ;;      Params:         0       0
   732 ;;      Locals:         0       0
   733 ;;      Temps:          0       0
   734 ;;      Totals:         0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    5
   738 ;; This function calls:
   739 ;;		_OSCILLATOR_Initialize
   740 ;;		_PIN_MANAGER_Initialize
   741 ;;		_TMR2_Initialize
   742 ;;		_WDT_Initialize
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _SYSTEM_Initialize
   750  00D2                     _SYSTEM_Initialize:
   751  00D2                     l829:	
   752                           ;incstack = 0
   753                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   754                           
   755                           
   756                           ;mcc_generated_files/mcc.c: 61:     dice.current = 0;
   757  00D2  300F               	movlw	-241
   758  00D3  05D6               	andwf	_dice,f
   759                           
   760                           ;mcc_generated_files/mcc.c: 62:     dice.next = 0;
   761  00D4  30F0               	movlw	-16
   762  00D5  05D6               	andwf	_dice,f
   763  00D6                     l831:
   764                           
   765                           ;mcc_generated_files/mcc.c: 64:     PIN_MANAGER_Initialize();
   766  00D6  20C8               	fcall	_PIN_MANAGER_Initialize
   767  00D7                     l833:
   768                           
   769                           ;mcc_generated_files/mcc.c: 65:     OSCILLATOR_Initialize();
   770  00D7  20EA               	fcall	_OSCILLATOR_Initialize
   771  00D8                     l835:
   772                           
   773                           ;mcc_generated_files/mcc.c: 66:     WDT_Initialize();
   774  00D8  20F3               	fcall	_WDT_Initialize
   775  00D9                     l837:
   776                           
   777                           ;mcc_generated_files/mcc.c: 67:     TMR2_Initialize();
   778  00D9  20DB               	fcall	_TMR2_Initialize
   779  00DA                     l52:
   780  00DA  0008               	return
   781  00DB                     __end_of_SYSTEM_Initialize:
   782                           
   783                           	psect	text2
   784  00F3                     __ptext2:	
   785 ;; *************** function _WDT_Initialize *****************
   786 ;; Defined at:
   787 ;;		line 80 in file "mcc_generated_files/mcc.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0
   801 ;;      Params:         0       0
   802 ;;      Locals:         0       0
   803 ;;      Temps:          0       0
   804 ;;      Totals:         0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    4
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_SYSTEM_Initialize
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _WDT_Initialize
   817  00F3                     _WDT_Initialize:
   818  00F3                     l821:	
   819                           ;incstack = 0
   820                           ; Regs used in _WDT_Initialize: [wreg]
   821                           
   822                           
   823                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
   824  00F3  3016               	movlw	22
   825  00F4  00B0               	movwf	48	;volatile
   826  00F5                     l58:
   827  00F5  0008               	return
   828  00F6                     __end_of_WDT_Initialize:
   829                           
   830                           	psect	text3
   831  00DB                     __ptext3:	
   832 ;; *************** function _TMR2_Initialize *****************
   833 ;; Defined at:
   834 ;;		line 63 in file "mcc_generated_files/tmr2.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0
   848 ;;      Params:         0       0
   849 ;;      Locals:         0       0
   850 ;;      Temps:          0       0
   851 ;;      Totals:         0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    4
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_SYSTEM_Initialize
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _TMR2_Initialize
   864  00DB                     _TMR2_Initialize:
   865  00DB                     l787:	
   866                           ;incstack = 0
   867                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   868                           
   869                           
   870                           ;mcc_generated_files/tmr2.c: 68:     PR2 = 0x00;
   871  00DB  0192               	clrf	18	;volatile
   872                           
   873                           ;mcc_generated_files/tmr2.c: 73:     TMR2 = 0x00;
   874  00DC  0191               	clrf	17	;volatile
   875  00DD                     l789:
   876                           
   877                           ;mcc_generated_files/tmr2.c: 76:     PIR1bits.TMR2IF = 0;
   878  00DD  108C               	bcf	12,1	;volatile
   879  00DE                     l791:
   880                           
   881                           ;mcc_generated_files/tmr2.c: 79:     PIE1bits.TMR2IE = 1;
   882  00DE  148D               	bsf	13,1	;volatile
   883  00DF                     l793:
   884                           
   885                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x04;
   886  00DF  3004               	movlw	4
   887  00E0  0093               	movwf	19	;volatile
   888  00E1                     l795:
   889                           
   890                           ;mcc_generated_files/tmr2.c: 89:     T2CONbits.TMR2ON = 0;
   891  00E1  1113               	bcf	19,2	;volatile
   892  00E2                     l21:
   893  00E2  0008               	return
   894  00E3                     __end_of_TMR2_Initialize:
   895                           
   896                           	psect	text4
   897  00C8                     __ptext4:	
   898 ;; *************** function _PIN_MANAGER_Initialize *****************
   899 ;; Defined at:
   900 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0
   914 ;;      Params:         0       0
   915 ;;      Locals:         0       0
   916 ;;      Temps:          0       0
   917 ;;      Totals:         0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    4
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_SYSTEM_Initialize
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _PIN_MANAGER_Initialize
   930  00C8                     _PIN_MANAGER_Initialize:
   931  00C8                     l803:	
   932                           ;incstack = 0
   933                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
   934                           
   935                           
   936                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
   937  00C8  0187               	clrf	7	;volatile
   938                           
   939                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x00;
   940  00C9  0186               	clrf	6	;volatile
   941                           
   942                           ;mcc_generated_files/pin_manager.c: 74:     ANSELA = 0x00;
   943  00CA  0188               	clrf	8	;volatile
   944                           
   945                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
   946  00CB  0189               	clrf	9	;volatile
   947  00CC                     l805:
   948                           
   949                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
   950  00CC  178E               	bsf	14,7	;volatile
   951  00CD                     l807:
   952                           
   953                           ;mcc_generated_files/pin_manager.c: 88:     IOCAFbits.IOCAF3 = 0;
   954  00CD  119C               	bcf	28,3	;volatile
   955  00CE                     l809:
   956                           
   957                           ;mcc_generated_files/pin_manager.c: 90:     IOCANbits.IOCAN3 = 1;
   958  00CE  159B               	bsf	27,3	;volatile
   959  00CF                     l811:
   960                           
   961                           ;mcc_generated_files/pin_manager.c: 92:     IOCAPbits.IOCAP3 = 1;
   962  00CF  159A               	bsf	26,3	;volatile
   963  00D0                     l813:
   964                           
   965                           ;mcc_generated_files/pin_manager.c: 99:     INTCONbits.IOCIE = 1;
   966  00D0  158B               	bsf	11,3	;volatile
   967  00D1                     l87:
   968  00D1  0008               	return
   969  00D2                     __end_of_PIN_MANAGER_Initialize:
   970                           
   971                           	psect	text5
   972  00EA                     __ptext5:	
   973 ;; *************** function _OSCILLATOR_Initialize *****************
   974 ;; Defined at:
   975 ;;		line 70 in file "mcc_generated_files/mcc.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0
   989 ;;      Params:         0       0
   990 ;;      Locals:         0       0
   991 ;;      Temps:          0       0
   992 ;;      Totals:         0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    4
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_SYSTEM_Initialize
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _OSCILLATOR_Initialize
  1005  00EA                     _OSCILLATOR_Initialize:
  1006  00EA                     l815:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1009                           
  1010                           
  1011                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x10;
  1012  00EA  3010               	movlw	16
  1013  00EB  0090               	movwf	16	;volatile
  1014  00EC                     l817:
  1015                           
  1016                           ;mcc_generated_files/mcc.c: 75:     CLKRCON = 0x00;
  1017  00EC  01A6               	clrf	38	;volatile
  1018  00ED                     l819:
  1019                           
  1020                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  1021  00ED  01BF               	clrf	63	;volatile
  1022  00EE                     l55:
  1023  00EE  0008               	return
  1024  00EF                     __end_of_OSCILLATOR_Initialize:
  1025                           
  1026                           	psect	text6
  1027  0084                     __ptext6:	
  1028 ;; *************** function _INTERRUPT_InterruptManager *****************
  1029 ;; Defined at:
  1030 ;;		line 96 in file "mcc_generated_files/interrupt_manager.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0
  1044 ;;      Params:         0       0
  1045 ;;      Locals:         0       0
  1046 ;;      Temps:          0       3
  1047 ;;      Totals:         0       3
  1048 ;;Total ram usage:        3 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    3
  1051 ;; This function calls:
  1052 ;;		_IOC_Handler
  1053 ;;		_TMR2_Handler
  1054 ;; This function is called by:
  1055 ;;		Interrupt level 1
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _INTERRUPT_InterruptManager
  1061  0084                     _INTERRUPT_InterruptManager:
  1062  0084                     i1l871:
  1063                           
  1064                           ;mcc_generated_files/interrupt_manager.c: 99:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  1065  0084  1D8B               	btfss	11,3	;volatile
  1066  0085  2887               	goto	u12_21
  1067  0086  2888               	goto	u12_20
  1068  0087                     u12_21:
  1069  0087  2890               	goto	i1l133
  1070  0088                     u12_20:
  1071  0088                     i1l873:
  1072  0088  1C0B               	btfss	11,0	;volatile
  1073  0089  288B               	goto	u13_21
  1074  008A  288C               	goto	u13_20
  1075  008B                     u13_21:
  1076  008B  2890               	goto	i1l133
  1077  008C                     u13_20:
  1078  008C                     i1l875:
  1079                           
  1080                           ;mcc_generated_files/interrupt_manager.c: 100:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 101:         INTCONbits.IOCIE = 0;
  1081  008C  118B               	bcf	11,3	;volatile
  1082                           
  1083                           ;mcc_generated_files/interrupt_manager.c: 103:         IOCAFbits.IOCAF3 = 0;
  1084  008D  119C               	bcf	28,3	;volatile
  1085  008E                     i1l877:
  1086                           
  1087                           ;mcc_generated_files/interrupt_manager.c: 104:         IOC_Handler();
  1088  008E  201F               	fcall	_IOC_Handler
  1089                           
  1090                           ;mcc_generated_files/interrupt_manager.c: 107:     }
  1091  008F  289E               	goto	i1l137
  1092  0090                     i1l133:	
  1093                           ;mcc_generated_files/interrupt_manager.c: 108:     else if(INTCONbits.PEIE == 1)
  1094                           
  1095  0090  1F0B               	btfss	11,6	;volatile
  1096  0091  2893               	goto	u14_21
  1097  0092  2894               	goto	u14_20
  1098  0093                     u14_21:
  1099  0093  289E               	goto	i1l137
  1100  0094                     u14_20:
  1101  0094                     i1l879:
  1102                           
  1103                           ;mcc_generated_files/interrupt_manager.c: 109:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 110:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  1104  0094  1C8D               	btfss	13,1	;volatile
  1105  0095  2897               	goto	u15_21
  1106  0096  2898               	goto	u15_20
  1107  0097                     u15_21:
  1108  0097  289E               	goto	i1l137
  1109  0098                     u15_20:
  1110  0098                     i1l881:
  1111  0098  1C8C               	btfss	12,1	;volatile
  1112  0099  289B               	goto	u16_21
  1113  009A  289C               	goto	u16_20
  1114  009B                     u16_21:
  1115  009B  289E               	goto	i1l137
  1116  009C                     u16_20:
  1117  009C                     i1l883:
  1118                           
  1119                           ;mcc_generated_files/interrupt_manager.c: 111:         {;mcc_generated_files/interrupt_m
      +                          anager.c: 113:             PIR1bits.TMR2IF = 0;
  1120  009C  108C               	bcf	12,1	;volatile
  1121  009D                     i1l885:
  1122                           
  1123                           ;mcc_generated_files/interrupt_manager.c: 114:             TMR2_Handler();
  1124  009D  20A7               	fcall	_TMR2_Handler
  1125  009E                     i1l137:
  1126  009E  0849               	movf	??_INTERRUPT_InterruptManager+2,w
  1127  009F  008A               	movwf	10
  1128  00A0  0848               	movf	??_INTERRUPT_InterruptManager+1,w
  1129  00A1  0084               	movwf	4
  1130  00A2  0E47               	swapf	??_INTERRUPT_InterruptManager,w
  1131  00A3  0083               	movwf	3
  1132  00A4  0EFE               	swapf	btemp,f
  1133  00A5  0E7E               	swapf	btemp,w
  1134  00A6  0009               	retfie
  1135  00A7                     __end_of_INTERRUPT_InterruptManager:
  1136                           
  1137                           	psect	intentry
  1138  0004                     __pintentry:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1141                           
  1142  0004                     interrupt_function:
  1143  007E                     saved_w	set	btemp
  1144  0004  00FE               	movwf	btemp
  1145  0005  0E03               	swapf	3,w
  1146  0006  00C7               	movwf	??_INTERRUPT_InterruptManager
  1147  0007  0804               	movf	4,w
  1148  0008  00C8               	movwf	??_INTERRUPT_InterruptManager+1
  1149  0009  080A               	movf	10,w
  1150  000A  00C9               	movwf	??_INTERRUPT_InterruptManager+2
  1151  000B  2884               	ljmp	_INTERRUPT_InterruptManager
  1152                           
  1153                           	psect	text7
  1154  00A7                     __ptext7:	
  1155 ;; *************** function _TMR2_Handler *****************
  1156 ;; Defined at:
  1157 ;;		line 84 in file "mcc_generated_files/interrupt_manager.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0
  1171 ;;      Params:         0       0
  1172 ;;      Locals:         0       0
  1173 ;;      Temps:          0       0
  1174 ;;      Totals:         0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_INTERRUPT_InterruptManager
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _TMR2_Handler
  1186  00A7                     _TMR2_Handler:
  1187  00A7                     i1l865:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _TMR2_Handler: [wreg]
  1190                           
  1191                           
  1192                           ;mcc_generated_files/interrupt_manager.c: 87:     if(TMR2IF==1)
  1193  00A7  1C8C               	btfss	12,1	;volatile
  1194  00A8  28AA               	goto	u11_21
  1195  00A9  28AB               	goto	u11_20
  1196  00AA                     u11_21:
  1197  00AA  28BA               	goto	i1l128
  1198  00AB                     u11_20:
  1199  00AB                     i1l867:
  1200                           
  1201                           ;mcc_generated_files/interrupt_manager.c: 88:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 89:        TMR2IF = 0;
  1202  00AB  108C               	bcf	12,1	;volatile
  1203  00AC                     i1l869:
  1204                           
  1205                           ;mcc_generated_files/interrupt_manager.c: 90:        counter++;
  1206  00AC  3001               	movlw	1
  1207  00AD  07D1               	addwf	_counter,f
  1208  00AE  3000               	movlw	0
  1209  00AF  1803               	skipnc
  1210  00B0  3001               	movlw	1
  1211  00B1  07D2               	addwf	_counter+1,f
  1212  00B2  3000               	movlw	0
  1213  00B3  1803               	skipnc
  1214  00B4  3001               	movlw	1
  1215  00B5  07D3               	addwf	_counter+2,f
  1216  00B6  3000               	movlw	0
  1217  00B7  1803               	skipnc
  1218  00B8  3001               	movlw	1
  1219  00B9  07D4               	addwf	_counter+3,f
  1220  00BA                     i1l128:
  1221  00BA  0008               	return
  1222  00BB                     __end_of_TMR2_Handler:
  1223                           
  1224                           	psect	text8
  1225  001F                     __ptext8:	
  1226 ;; *************** function _IOC_Handler *****************
  1227 ;; Defined at:
  1228 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  state           2    3[BANK0 ] int 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0
  1242 ;;      Params:         0       0
  1243 ;;      Locals:         0       4
  1244 ;;      Temps:          0       3
  1245 ;;      Totals:         0       7
  1246 ;;Total ram usage:        7 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		_TMR2_StartTimer
  1251 ;;		_TMR2_StopTimer
  1252 ;;		_throwDice
  1253 ;; This function is called by:
  1254 ;;		_INTERRUPT_InterruptManager
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _IOC_Handler
  1260  001F                     _IOC_Handler:
  1261  001F                     i1l839:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _IOC_Handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1264                           
  1265                           
  1266                           ;mcc_generated_files/interrupt_manager.c: 55:     int state = PORTAbits.RA3;
  1267  001F  0C05               	rrf	5,w	;volatile
  1268  0020  00C0               	movwf	??_IOC_Handler
  1269  0021  0CC0               	rrf	??_IOC_Handler,f
  1270  0022  0C40               	rrf	??_IOC_Handler,w
  1271  0023  3901               	andlw	1
  1272  0024  00C1               	movwf	??_IOC_Handler+1
  1273  0025  01C2               	clrf	??_IOC_Handler+2
  1274  0026  0841               	movf	??_IOC_Handler+1,w
  1275  0027  00C3               	movwf	IOC_Handler@state
  1276  0028  0842               	movf	??_IOC_Handler+2,w
  1277  0029  00C4               	movwf	IOC_Handler@state+1
  1278                           
  1279                           ;mcc_generated_files/interrupt_manager.c: 58:     if(state)
  1280  002A  0843               	movf	IOC_Handler@state,w
  1281  002B  0444               	iorwf	IOC_Handler@state+1,w
  1282  002C  1903               	btfsc	3,2
  1283  002D  282F               	goto	u9_21
  1284  002E  2830               	goto	u9_20
  1285  002F                     u9_21:
  1286  002F  2878               	goto	i1l857
  1287  0030                     u9_20:
  1288  0030                     i1l841:
  1289                           
  1290                           ;mcc_generated_files/interrupt_manager.c: 59:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 60:         TMR2_StopTimer();
  1291  0030  20FC               	fcall	_TMR2_StopTimer
  1292  0031                     i1l843:
  1293                           
  1294                           ;mcc_generated_files/interrupt_manager.c: 61:         _delay((unsigned long)((20)*(25000
      +                          0/4000.0)));
  1295  0031  30F9               	movlw	249
  1296  0032  00C0               	movwf	??_IOC_Handler
  1297  0033                     u17_27:
  1298  0033  2834               	nop2
  1299  0034  0BC0               	decfsz	??_IOC_Handler,f
  1300  0035  2833               	goto	u17_27
  1301  0036  2837               	nop2
  1302  0037  2838               	nop2
  1303  0038                     i1l845:
  1304                           
  1305                           ;mcc_generated_files/interrupt_manager.c: 63:         dice.current = (counter >= 125000)
      +                           ? throwDice() : dice.current;
  1306  0038  1BD4               	btfsc	_counter+3,7
  1307  0039  284D               	goto	u10_20
  1308  003A  0854               	movf	_counter+3,w
  1309  003B  1D03               	btfss	3,2
  1310  003C  284C               	goto	u10_21
  1311  003D  3001               	movlw	1
  1312  003E  0253               	subwf	_counter+2,w
  1313  003F  1D03               	skipz
  1314  0040  2849               	goto	u10_23
  1315  0041  30E8               	movlw	232
  1316  0042  0252               	subwf	_counter+1,w
  1317  0043  1D03               	skipz
  1318  0044  2849               	goto	u10_23
  1319  0045  3048               	movlw	72
  1320  0046  0251               	subwf	_counter,w
  1321  0047  1D03               	skipz
  1322  0048  2849               	goto	u10_23
  1323  0049                     u10_23:
  1324  0049  1803               	btfsc	3,0
  1325  004A  284C               	goto	u10_21
  1326  004B  284D               	goto	u10_20
  1327  004C                     u10_21:
  1328  004C  2856               	goto	i1l849
  1329  004D                     u10_20:
  1330  004D                     i1l847:
  1331  004D  0E56               	swapf	_dice,w
  1332  004E  390F               	andlw	15
  1333  004F  00C0               	movwf	??_IOC_Handler
  1334  0050  01C1               	clrf	??_IOC_Handler+1
  1335  0051  0840               	movf	??_IOC_Handler,w
  1336  0052  00C5               	movwf	_IOC_Handler$353
  1337  0053  0841               	movf	??_IOC_Handler+1,w
  1338  0054  00C6               	movwf	_IOC_Handler$353+1
  1339  0055  285D               	goto	i1l851
  1340  0056                     i1l849:
  1341  0056  20EF               	fcall	_throwDice
  1342  0057  00C0               	movwf	??_IOC_Handler
  1343  0058  01C1               	clrf	??_IOC_Handler+1
  1344  0059  0840               	movf	??_IOC_Handler,w
  1345  005A  00C5               	movwf	_IOC_Handler$353
  1346  005B  0841               	movf	??_IOC_Handler+1,w
  1347  005C  00C6               	movwf	_IOC_Handler$353+1
  1348  005D                     i1l851:
  1349  005D  0845               	movf	_IOC_Handler$353,w
  1350  005E  00C0               	movwf	??_IOC_Handler
  1351  005F  0EC0               	swapf	??_IOC_Handler,f
  1352  0060  0856               	movf	_dice,w
  1353  0061  0640               	xorwf	??_IOC_Handler,w
  1354  0062  390F               	andlw	-241
  1355  0063  0640               	xorwf	??_IOC_Handler,w
  1356  0064  00D6               	movwf	_dice
  1357  0065                     i1l853:
  1358                           
  1359                           ;mcc_generated_files/interrupt_manager.c: 66:         (LATA = numbers[dice.current]);
  1360  0065  0E56               	swapf	_dice,w
  1361  0066  390F               	andlw	15
  1362  0067  3E4A               	addlw	(low (_numbers| 0))& (0+255)
  1363  0068  0084               	movwf	4
  1364  0069  0800               	movf	0,w
  1365  006A  0087               	movwf	7	;volatile
  1366  006B                     i1l855:
  1367                           
  1368                           ;mcc_generated_files/interrupt_manager.c: 68:         _delay((unsigned long)((15000)*(25
      +                          0000/4000.0)));
  1369  006B  3005               	movlw	5
  1370  006C  00C2               	movwf	??_IOC_Handler+2
  1371  006D  30C2               	movlw	194
  1372  006E  00C1               	movwf	??_IOC_Handler+1
  1373  006F  3083               	movlw	131
  1374  0070  00C0               	movwf	??_IOC_Handler
  1375  0071                     u18_27:
  1376  0071  0BC0               	decfsz	??_IOC_Handler,f
  1377  0072  2871               	goto	u18_27
  1378  0073  0BC1               	decfsz	??_IOC_Handler+1,f
  1379  0074  2871               	goto	u18_27
  1380  0075  0BC2               	decfsz	??_IOC_Handler+2,f
  1381  0076  2871               	goto	u18_27
  1382                           
  1383                           ;mcc_generated_files/interrupt_manager.c: 71:     }
  1384  0077  2880               	goto	i1l861
  1385  0078                     i1l857:
  1386                           
  1387                           ;mcc_generated_files/interrupt_manager.c: 73:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 74:         TMR2_StartTimer();
  1388  0078  20F9               	fcall	_TMR2_StartTimer
  1389  0079                     i1l859:
  1390                           
  1391                           ;mcc_generated_files/interrupt_manager.c: 75:         _delay((unsigned long)((20)*(25000
      +                          0/4000.0)));
  1392  0079  30F9               	movlw	249
  1393  007A  00C0               	movwf	??_IOC_Handler
  1394  007B                     u19_27:
  1395  007B  287C               	nop2
  1396  007C  0BC0               	decfsz	??_IOC_Handler,f
  1397  007D  287B               	goto	u19_27
  1398  007E  287F               	nop2
  1399  007F  2880               	nop2
  1400  0080                     i1l861:
  1401                           
  1402                           ;mcc_generated_files/interrupt_manager.c: 79:     (LATA = numbers[0]);
  1403  0080  084A               	movf	_numbers,w
  1404  0081  0087               	movwf	7	;volatile
  1405  0082                     i1l863:
  1406                           
  1407                           ;mcc_generated_files/interrupt_manager.c: 81:     INTCONbits.IOCIE = 1;
  1408  0082  158B               	bsf	11,3	;volatile
  1409  0083                     i1l124:
  1410  0083  0008               	return
  1411  0084                     __end_of_IOC_Handler:
  1412                           
  1413                           	psect	text9
  1414  00EF                     __ptext9:	
  1415 ;; *************** function _throwDice *****************
  1416 ;; Defined at:
  1417 ;;		line 13 in file "throwdice.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      unsigned char 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0
  1431 ;;      Params:         0       0
  1432 ;;      Locals:         0       0
  1433 ;;      Temps:          0       0
  1434 ;;      Totals:         0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		_genNextNumber
  1440 ;; This function is called by:
  1441 ;;		_IOC_Handler
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _throwDice
  1447  00EF                     _throwDice:
  1448  00EF                     i1l823:	
  1449                           ;incstack = 0
  1450                           ; Regs used in _throwDice: [wreg+status,2+status,0+pclath+cstack]
  1451                           
  1452                           
  1453                           ;throwdice.c: 15:     genNextNumber();
  1454  00EF  20F6               	fcall	_genNextNumber
  1455  00F0                     i1l825:
  1456                           
  1457                           ;throwdice.c: 16:     return dice.next;
  1458  00F0  0856               	movf	_dice,w
  1459  00F1  390F               	andlw	15
  1460  00F2                     i1l167:
  1461  00F2  0008               	return
  1462  00F3                     __end_of_throwDice:
  1463                           
  1464                           	psect	text10
  1465  00F6                     __ptext10:	
  1466 ;; *************** function _genNextNumber *****************
  1467 ;; Defined at:
  1468 ;;		line 4 in file "throwdice.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0
  1482 ;;      Params:         0       0
  1483 ;;      Locals:         0       0
  1484 ;;      Temps:          0       0
  1485 ;;      Totals:         0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_throwDice
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _genNextNumber
  1497  00F6                     _genNextNumber:
  1498  00F6                     i1l785:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _genNextNumber: [wreg+status,2+status,0]
  1501                           
  1502                           
  1503                           ;throwdice.c: 10:     dice.next = 0;
  1504  00F6  30F0               	movlw	-16
  1505  00F7  05D6               	andwf	_dice,f
  1506  00F8                     i1l164:
  1507  00F8  0008               	return
  1508  00F9                     __end_of_genNextNumber:
  1509                           
  1510                           	psect	text11
  1511  00FC                     __ptext11:	
  1512 ;; *************** function _TMR2_StopTimer *****************
  1513 ;; Defined at:
  1514 ;;		line 102 in file "mcc_generated_files/tmr2.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		None
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0
  1528 ;;      Params:         0       0
  1529 ;;      Locals:         0       0
  1530 ;;      Temps:          0       0
  1531 ;;      Totals:         0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_IOC_Handler
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _TMR2_StopTimer
  1543  00FC                     _TMR2_StopTimer:
  1544  00FC                     i1l801:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _TMR2_StopTimer: []
  1547                           
  1548                           
  1549                           ;mcc_generated_files/tmr2.c: 105:     T2CONbits.TMR2ON = 0;
  1550  00FC  1113               	bcf	19,2	;volatile
  1551  00FD                     i1l27:
  1552  00FD  0008               	return
  1553  00FE                     __end_of_TMR2_StopTimer:
  1554                           
  1555                           	psect	text12
  1556  00F9                     __ptext12:	
  1557 ;; *************** function _TMR2_StartTimer *****************
  1558 ;; Defined at:
  1559 ;;		line 92 in file "mcc_generated_files/tmr2.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		status,2
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0
  1573 ;;      Params:         0       0
  1574 ;;      Locals:         0       0
  1575 ;;      Temps:          0       0
  1576 ;;      Totals:         0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_IOC_Handler
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _TMR2_StartTimer
  1588  00F9                     _TMR2_StartTimer:
  1589  00F9                     i1l797:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _TMR2_StartTimer: [status,2]
  1592                           
  1593                           
  1594                           ;mcc_generated_files/tmr2.c: 95:     TMR2 = 0x00;
  1595  00F9  0191               	clrf	17	;volatile
  1596  00FA                     i1l799:
  1597                           
  1598                           ;mcc_generated_files/tmr2.c: 98:     T2CONbits.TMR2ON = 1;
  1599  00FA  1513               	bsf	19,2	;volatile
  1600  00FB                     i1l24:
  1601  00FB  0008               	return
  1602  00FC                     __end_of_TMR2_StartTimer:
  1603  007E                     btemp	set	126	;btemp
  1604  007E                     wtemp0	set	126
  1605                           
  1606                           	psect	config
  1607                           
  1608                           ;Config register CONFIG @ 0x2007
  1609                           ;	Oscillator Selection bits
  1610                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  1611                           ;	Brown-out Reset Enable
  1612                           ;	BOREN = OFF, Brown-out Reset disabled
  1613                           ;	Watchdog Timer Enable
  1614                           ;	WDTE = OFF, WDT disabled
  1615                           ;	Power-up Timer Enable bit
  1616                           ;	PWRTE = OFF, PWRT disabled
  1617                           ;	MCLR Pin Function Select bit
  1618                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1619                           ;	Code Protection bit
  1620                           ;	CP = OFF, Program memory code protection is disabled
  1621                           ;	Low-Voltage Programming Enable
  1622                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1623                           ;	Brown-out Reset Selection bits
  1624                           ;	LPBOR = OFF, BOR disabled
  1625                           ;	Brown-out Reset Voltage Selection
  1626                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1627                           ;	Flash Memory Self-Write Protection
  1628                           ;	WRT = OFF, Write protection off
  1629  2007                     	org	8199
  1630  2007  3CA0               	dw	15520

Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     10      23

Pointer List with Targets:

    IOCAF3_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_IOC_Handler

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           3     3      0      47
                                              7 BANK0      3     3      0
                        _IOC_Handler
                       _TMR2_Handler
 ---------------------------------------------------------------------------------
 (4) _TMR2_Handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IOC_Handler                                          7     7      0      47
                                              0 BANK0      7     7      0
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                          _throwDice
 ---------------------------------------------------------------------------------
 (5) _throwDice                                            0     0      0       0
                      _genNextNumber
 ---------------------------------------------------------------------------------
 (6) _genNextNumber                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _IOC_Handler
     _TMR2_StartTimer
     _TMR2_StopTimer
     _throwDice
       _genNextNumber
   _TMR2_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK0               3E      A      17       3       37.1%
BITBANK0            3E      0       0       6        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      17       5        0.0%
ABS                  0      0      17       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Dec 01 20:22:38 2020

                                 l21 00E2                                   l52 00DA  
                                 l55 00EE                                   l58 00F5  
                                 l87 00D1                                  l811 00CF  
                                l803 00C8                                  l813 00D0  
                                l805 00CC                                  l821 00F3  
                                l815 00EA                                  l807 00CD  
                                l831 00D6                                  l817 00EC  
                                l809 00CE                                  l833 00D7  
                                l819 00ED                                  l835 00D8  
                                l837 00D9                                  l829 00D2  
                                l791 00DE                                  l793 00DF  
                                l795 00E1                                  l787 00DB  
                                l891 00BD                                  l789 00DD  
                                l887 00BB                                  l889 00BC  
                                _PR2 0012                                  fsr0 0004  
                                indf 0000                      _TMR2_Initialize 00DB  
                               _LATA 0007                                 i1l24 00FB  
                               i1l27 00FD                                 _TMR2 0011  
                               _WPUA 0009                                 u9_20 0030  
                               u9_21 002F                                 _dice 0056  
                               _main 00BB                         ?_IOC_Handler 0040  
                               btemp 007E                                 start 000C  
     __size_of_OSCILLATOR_Initialize 0005        __end_of_OSCILLATOR_Initialize 00EF  
                              ?_main 0040                                _T2CON 0013  
                              i1l124 0083                                i1l133 0090  
                              i1l128 00BA                                i1l137 009E  
                              i1l164 00F8                                i1l167 00F2  
                              i1l801 00FC                                i1l823 00EF  
                              i1l825 00F0                                i1l841 0030  
                              i1l851 005D                                i1l843 0031  
                              i1l861 0080                                i1l853 0065  
                              i1l845 0038                                i1l863 0082  
                              i1l855 006B                                i1l847 004D  
                              i1l839 001F                                i1l871 0084  
                              i1l785 00F6                                i1l849 0056  
                              i1l857 0078                                i1l865 00A7  
                              i1l881 0098                                i1l873 0088  
                              i1l859 0079                                i1l867 00AB  
                              i1l883 009C                                i1l875 008C  
                              i1l797 00F9                                i1l869 00AC  
                              i1l885 009D                                i1l877 008E  
                              i1l799 00FA                                i1l879 0094  
                              u10_20 004D                                u10_21 004C  
                              u10_23 0049                                u11_20 00AB  
                              u11_21 00AA                                u12_20 0088  
                              u12_21 0087                                u13_20 008C  
                              u13_21 008B                                u14_20 0094  
                              u14_21 0093                                u15_20 0098  
                              u15_21 0097                                u16_20 009C  
                              u16_21 009B                                u17_27 0033  
                              u18_27 0071                                u19_27 007B  
                              _TRISA 0006                       _WDT_Initialize 00F3  
                              pclath 000A                                status 0003  
                              wtemp0 007E                      _TMR2_StartTimer 00F9  
                    __initialization 000D                         __end_of_main 00C8  
            __end_of_TMR2_Initialize 00E3          ?_INTERRUPT_InterruptManager 0040  
                             ??_main 0000               __end_of_WDT_Initialize 00F6  
                             _ANSELA 0008                               _BORCON 003F  
                             _OSCCON 0010                               _TMR2IF 0061  
                             _WDTCON 0030                __end_of_genNextNumber 00F9  
                             saved_w 007E                      ?_WDT_Initialize 0040  
            __end_of_TMR2_StartTimer 00FC                    _SYSTEM_Initialize 00D2  
            __end_of__initialization 001D                   ?_SYSTEM_Initialize 0040  
               __size_of_IOC_Handler 0065                       __pcstackCOMMON 0000  
                       __pidataBANK0 00E3                  ??_SYSTEM_Initialize 0000  
                   ?_TMR2_Initialize 0040                       _OPTION_REGbits 000E  
          __end_of_SYSTEM_Initialize 00DB                           __pbssBANK0 0055  
                         __pmaintext 00BB                           __pintentry 0004  
                            _CLKRCON 0026                   __size_of_throwDice 0004  
            __size_of_TMR2_StopTimer 0002                     ?_TMR2_StartTimer 0040  
                      ?_TMR2_Handler 0040                              __ptext1 00D2  
                            __ptext2 00F3                              __ptext3 00DB  
                            __ptext4 00C8                              __ptext5 00EA  
                            __ptext6 0084                              __ptext7 00A7  
                            __ptext8 001F                              __ptext9 00EF  
                            _counter 0051                _OSCILLATOR_Initialize 00EA  
                          _T2CONbits 0013             ??_PIN_MANAGER_Initialize 0000  
                          _IOCAFbits 001C                            _IOCANbits 001B  
                          _IOCAPbits 001A                              _numbers 004A  
         __size_of_SYSTEM_Initialize 0009                 end_of_initialization 001D  
                     ??_TMR2_Handler 0000                    __end_of_throwDice 00F3  
                   ??_WDT_Initialize 0000                            _PORTAbits 0005  
             ?_OSCILLATOR_Initialize 0040                  start_initialization 000D  
    __size_of_PIN_MANAGER_Initialize 000A                       _TMR2_StopTimer 00FC  
             __size_of_genNextNumber 0003                        ??_IOC_Handler 0040  
                    _IOC_Handler$353 0045                          __pdataBANK0 004A  
             __end_of_TMR2_StopTimer 00FE                            ___latbits 0000  
                      __pcstackBANK0 0040             __size_of_TMR2_Initialize 0008  
               __end_of_TMR2_Handler 00BB                     IOC_Handler@state 0043  
                          __pnvBANK0 0051               _PIN_MANAGER_Initialize 00C8  
                __end_of_IOC_Handler 0084         ??_INTERRUPT_InterruptManager 0047  
                      _genNextNumber 00F6                      ?_TMR2_StopTimer 0040  
                  interrupt_function 0004                             _PIE1bits 000D  
           __size_of_TMR2_StartTimer 0003  __size_of_INTERRUPT_InterruptManager 0023  
                           _PIR1bits 000C                       ?_genNextNumber 0040  
                          _throwDice 00EF                    ??_TMR2_Initialize 0000  
                        _IOC_Handler 001F              ??_OSCILLATOR_Initialize 0000  
                         ?_throwDice 0040                __size_of_TMR2_Handler 0014  
                           __ptext10 00F6                             __ptext11 00FC  
                           __ptext12 00F9                        __size_of_main 000D  
                       _TMR2_Handler 00A7                      ??_genNextNumber 0000  
                  ??_TMR2_StartTimer 0000   __end_of_INTERRUPT_InterruptManager 00A7  
         _INTERRUPT_InterruptManager 0084                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0003                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0040                     ??_TMR2_StopTimer 0000  
                        ??_throwDice 0000       __end_of_PIN_MANAGER_Initialize 00D2  
            _IOCAF3_InterruptHandler 0055  
